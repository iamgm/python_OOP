import re

stich = ["Я к вам пишу – чего же боле?",
        "Что я могу еще сказать?",
        "Теперь, я знаю, в вашей воле",
        "Меня презреньем наказать.",
        "Но вы, к моей несчастной доле",
        "Хоть каплю жалости храня,",
        "Вы не оставите меня."]

class StringText:
    def __init__(self, lst_words):
        self.lst_words = lst_words

    def __gt__(self, other):
        return len(self.lst_words) > len(other.lst_words)

    def __ge__(self, other):
        return len(self.lst_words) >= len(other.lst_words)

lst_text = [StringText(re.sub(r"[–?!,.;]", "", s).split()) for s in stich]
lst_text_sorted = sorted(lst_text, key = lambda x: len(x.lst_words), reverse=True )
lst_text_sorted = [" ".join(x.lst_words) for x in lst_text_sorted]print(lst_text_sorted)

# Подвиг 5. Имеется стихотворение, представленное следующим списком строк:

# stich = ["Я к вам пишу – чего же боле?",
#         "Что я могу еще сказать?",
#         "Теперь, я знаю, в вашей воле",
#         "Меня презреньем наказать.",
#         "Но вы, к моей несчастной доле",
#         "Хоть каплю жалости храня,",
#         "Вы не оставите меня."]
# Необходимо в каждой строчке этого стиха убрать символы "–?!,.;" в начале и в конце каждого слова и разбить строку по словам (слова разделяются одним или несколькими пробелами). На основе полученного списка слов, создать объект класса StringText командой:

# st = StringText(lst_words)
# где lst_words - список из слов одной строчки стихотворения. 

# С объектами класса StringText должны быть реализованы операторы сравнения:

# st1 > st2   # True, если число слов в st1 больше, чем в st2
# st1 >= st2  # True, если число слов в st1 больше или равно st2
# st1 < st2   # True, если число слов в st1 меньше, чем в st2
# st1 <= st2  # True, если число слов в st1 меньше или равно st2
# Все объекты класса StringText (для каждой строчки стихотворения) сохранить в списке lst_text. Затем, сформировать новый список lst_text_sorted из отсортированных объектов класса StringText по убыванию числа слов. Для сортировки использовать стандартную функцию sorted() языка Python. После этого преобразовать данный список (lst_text_sorted) в список из строк (объекты заменяются на соответствующие строки, между словами ставится пробел).

# P.S. На экран в программе ничего выводить не нужно.